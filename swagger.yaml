---
# check the definitions for listing segments and playlists
swagger: "2.0"
info:
  description: AWS API implementation for a web-based video library
  version: 1.0.0
  title: Quietly Confident AWS API
  contact:
    email: asantos@wpi.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /Quietly-Confident/AWS-api/1.0.0
tags:
- name: Administrator
  description: Privledged user responsible for maintaining video database
- name: user
  description: allowed to access videos, playlists, and has ability to create and manage playlists (upload videos?)
schemes:
- https
- http


##########
paths:
# admin use cases
  /upload_video:
    post:
      tags:
      - Administrator
      summary: Upload a video to remote library
      description: Requests the upload of a video by an admin.
      operationId: requestVideoUpload
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: UploadRequest
        description: Uploads a video
        required: false
        schema:
          $ref: '#/definitions/UploadVideo'
      responses:
        200:
          description: Successfully uploaded video from library.
        400:
          description: Failed to upload video to library.
          
  /delete_video:
    post:
      tags:
      - Administrator
      summary: Delete a video from remote library
      description: Requests the deletion of a video by an admin.
      operationId: requestVideoDelete
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DeleteRequest
        description: Deletes a video
        required: false
        schema:
          $ref: '#/definitions/DeleteVideo'
      responses:
        200:
          description: Successfully deleted video from library.
        400:
          description: Failed to delete video from library.
          
  /list_video_segments:          
    post:
      tags:
      - Administrator
      summary: Returns a list of all video segments in the library.
      description: Requests a list of all video segments by an admin.
      operationId: requestVideoList
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: VideoListRequest
        description: Lists all video segements in library
        required: false
        schema:
          $ref: '#/definitions/ListVideoSegments'
      responses:
        200:
          description: Successfully listed all video segments in library.
        400:
          description: Failed to fetch video segment list from library.
                    
  /search_video_segments:          
    post:
      tags:
      - Administrator
      summary: Returns a list of all video segments in the library matching key word.
      description: Requests a list of all video segments matching title key word criteria by an admin.
      operationId: requestVideoSearch
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: VideoSearchRequest
        description: Searches by key word and lists all video segements in library that match
        required: false
        schema:
          $ref: '#/definitions/SearchVideoSegments'
      responses:
        200:
          description: Successfully searched all video segments in library.
        400:
          description: Failed to search video segment library.
   
          
  /create_playlist: 
    post:
      tags:
      - Participant
      summary: Create a playlist with video segments in the library
      description: Requests the addition of a playlist to the library
      operationId: requestPlaylistCreate
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CreateRequest
        description: Creates a playlist
        required: false
        schema:
          $ref: '#/definitions/CreatePlaylist'
      responses:
        200:
          description: Successfully created playlist in the library.
        400:
          description: Playlist already exists under this name.        
          
  /delete_playlist: 
    post:
      tags:
      - Participant
      summary: Delete a playlist with video segments in the library
      description: Requests the deletion of a playlist in the library
      operationId: requestPlaylistDelete
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DeleteRequest
        description: Deletes a playlist
        required: false
        schema:
          $ref: '#/definitions/DeletePlaylist'
      responses:
        200:
          description: Successfully deleted playlist in the library.
        400:
          description: No playlist found.        
          
  /list_playlists: 
    post:
      tags:
      - Participant
      summary: List all playlists in the library
      description: Requests a list of the playlists in the library
      operationId: requestPlaylistList
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ListPlaylistRequest
        description: List all playlists
        required: false
        schema:
          $ref: '#/definitions/ListPlaylists'
      responses:
        200:
          description: Successfully listed all playlists in the library.
        400:
          description: No playlists found.        

  /play_playlist: 
    post:
      tags:
      - Participant
      summary: Plays the video segments in a certain playlist
      description: Requests a a playlist in the library
      operationId: requestPlaylistPlay
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ListPlaylistRequest
        description: Plays all video segments in playlist
        required: false
        schema:
          $ref: '#/definitions/PlayPlaylist'
      responses:
        200:
          description: Successfully played playlist
        400:
          description: No playlist found with that name.
          
#############
definitions:
# admin use cases
  DeleteVideo:
    type: object
    properties:
      title:
        type: string
        
  UploadVideo:
    type: object
    properties:
      filepath:
        type: string 
      title:
         type: string      
         
  ListVideoSegments:
    type: object
             
  SearchVideoSegments:
    type: object
    properties:
       keyword:
          type: string
          
  CreatePlaylist:
    type: object
    required:
    - title
    properties:
      title:
        type: string
        
  DeletePlaylist:
    type: object
    required:
    - title
    properties:
      title:
        type: string
  
  ListPlaylists:
    type: string
    
  PlayPlaylist:
    type: object
    required:
    - title
    properties:
      title:
        type: string